'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class FeriaZagEntities3
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=FeriaZagEntities3")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property Categoria() As DbSet(Of Categoria)
    Public Overridable Property Clientes() As DbSet(Of Clientes)
    Public Overridable Property Perfil() As DbSet(Of Perfil)
    Public Overridable Property Productos() As DbSet(Of Productos)
    Public Overridable Property Proveedores() As DbSet(Of Proveedores)
    Public Overridable Property sysdiagrams() As DbSet(Of sysdiagrams)
    Public Overridable Property Usuario() As DbSet(Of Usuario)
    Public Overridable Property Venta_Cabecera() As DbSet(Of Venta_Cabecera)
    Public Overridable Property Venta_Detalle() As DbSet(Of Venta_Detalle)

    Public Overridable Function Aumentarstock(codigo As String, cantidad As Nullable(Of Integer)) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("Cantidad", cantidad), New ObjectParameter("Cantidad", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Aumentarstock", codigoParameter, cantidadParameter)
    End Function

    Public Overridable Function BajaCategoria(idCategoria As String) As Integer
        Dim idCategoriaParameter As ObjectParameter = If(idCategoria IsNot Nothing, New ObjectParameter("IdCategoria", idCategoria), New ObjectParameter("IdCategoria", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("BajaCategoria", idCategoriaParameter)
    End Function

    Public Overridable Function BajaCliente(id_Cliente As String) As Integer
        Dim id_ClienteParameter As ObjectParameter = If(id_Cliente IsNot Nothing, New ObjectParameter("Id_Cliente", id_Cliente), New ObjectParameter("Id_Cliente", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("BajaCliente", id_ClienteParameter)
    End Function

    Public Overridable Function BajaProducto(codigo As String) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("BajaProducto", codigoParameter)
    End Function

    Public Overridable Function BajaUsuario(id_Usuario As Nullable(Of Integer)) As Integer
        Dim id_UsuarioParameter As ObjectParameter = If(id_Usuario.HasValue, New ObjectParameter("Id_Usuario", id_Usuario), New ObjectParameter("Id_Usuario", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("BajaUsuario", id_UsuarioParameter)
    End Function

    Public Overridable Function BuscarClientePorDni(dni As Nullable(Of Integer)) As ObjectResult(Of BuscarClientePorDni_Result)
        Dim dniParameter As ObjectParameter = If(dni.HasValue, New ObjectParameter("Dni", dni), New ObjectParameter("Dni", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of BuscarClientePorDni_Result)("BuscarClientePorDni", dniParameter)
    End Function

    Public Overridable Function BuscarProductoPorCategoria(categoria As String) As ObjectResult(Of BuscarProductoPorCategoria_Result)
        Dim categoriaParameter As ObjectParameter = If(categoria IsNot Nothing, New ObjectParameter("Categoria", categoria), New ObjectParameter("Categoria", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of BuscarProductoPorCategoria_Result)("BuscarProductoPorCategoria", categoriaParameter)
    End Function

    Public Overridable Function BuscarProductoPorCodigo(codigo As String) As ObjectResult(Of BuscarProductoPorCodigo_Result)
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of BuscarProductoPorCodigo_Result)("BuscarProductoPorCodigo", codigoParameter)
    End Function

    Public Overridable Function BuscarUsuarioPorDni(dni As Nullable(Of Integer)) As ObjectResult(Of BuscarUsuarioPorDni_Result)
        Dim dniParameter As ObjectParameter = If(dni.HasValue, New ObjectParameter("Dni", dni), New ObjectParameter("Dni", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of BuscarUsuarioPorDni_Result)("BuscarUsuarioPorDni", dniParameter)
    End Function

    Public Overridable Function Disminuirstock(codigo As String, cantidad As Nullable(Of Integer)) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("cantidad", cantidad), New ObjectParameter("cantidad", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Disminuirstock", codigoParameter, cantidadParameter)
    End Function

    Public Overridable Function EliminarProveedor(cod_Proveedor As String) As Integer
        Dim cod_ProveedorParameter As ObjectParameter = If(cod_Proveedor IsNot Nothing, New ObjectParameter("Cod_Proveedor", cod_Proveedor), New ObjectParameter("Cod_Proveedor", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("EliminarProveedor", cod_ProveedorParameter)
    End Function

    Public Overridable Function GenerarComprobante(id_Cabecera As Nullable(Of Integer)) As ObjectResult(Of GenerarComprobante_Result)
        Dim id_CabeceraParameter As ObjectParameter = If(id_Cabecera.HasValue, New ObjectParameter("Id_Cabecera", id_Cabecera), New ObjectParameter("Id_Cabecera", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GenerarComprobante_Result)("GenerarComprobante", id_CabeceraParameter)
    End Function

    Public Overridable Function ModificarCategoria(idCategoria As String, categoria As String, activos As String) As Integer
        Dim idCategoriaParameter As ObjectParameter = If(idCategoria IsNot Nothing, New ObjectParameter("IdCategoria", idCategoria), New ObjectParameter("IdCategoria", GetType(String)))

        Dim categoriaParameter As ObjectParameter = If(categoria IsNot Nothing, New ObjectParameter("Categoria", categoria), New ObjectParameter("Categoria", GetType(String)))

        Dim activosParameter As ObjectParameter = If(activos IsNot Nothing, New ObjectParameter("Activos", activos), New ObjectParameter("Activos", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ModificarCategoria", idCategoriaParameter, categoriaParameter, activosParameter)
    End Function

    Public Overridable Function ModificarCliente(id_Cliente As String, nombre As String, apellido As String, dni As Nullable(Of Integer), telefono As Nullable(Of Long), email As String, domicilio As String, activo As String) As Integer
        Dim id_ClienteParameter As ObjectParameter = If(id_Cliente IsNot Nothing, New ObjectParameter("Id_Cliente", id_Cliente), New ObjectParameter("Id_Cliente", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("Apellido", apellido), New ObjectParameter("Apellido", GetType(String)))

        Dim dniParameter As ObjectParameter = If(dni.HasValue, New ObjectParameter("Dni", dni), New ObjectParameter("Dni", GetType(Integer)))

        Dim telefonoParameter As ObjectParameter = If(telefono.HasValue, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(Long)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim domicilioParameter As ObjectParameter = If(domicilio IsNot Nothing, New ObjectParameter("Domicilio", domicilio), New ObjectParameter("Domicilio", GetType(String)))

        Dim activoParameter As ObjectParameter = If(activo IsNot Nothing, New ObjectParameter("Activo", activo), New ObjectParameter("Activo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ModificarCliente", id_ClienteParameter, nombreParameter, apellidoParameter, dniParameter, telefonoParameter, emailParameter, domicilioParameter, activoParameter)
    End Function

    Public Overridable Function ModificarProductos(codigo As String, producto As String, idCategoria As String, precio As Nullable(Of Decimal), stock As Nullable(Of Integer), activo As String) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim productoParameter As ObjectParameter = If(producto IsNot Nothing, New ObjectParameter("Producto", producto), New ObjectParameter("Producto", GetType(String)))

        Dim idCategoriaParameter As ObjectParameter = If(idCategoria IsNot Nothing, New ObjectParameter("IdCategoria", idCategoria), New ObjectParameter("IdCategoria", GetType(String)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("Precio", precio), New ObjectParameter("Precio", GetType(Decimal)))

        Dim stockParameter As ObjectParameter = If(stock.HasValue, New ObjectParameter("Stock", stock), New ObjectParameter("Stock", GetType(Integer)))

        Dim activoParameter As ObjectParameter = If(activo IsNot Nothing, New ObjectParameter("Activo", activo), New ObjectParameter("Activo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ModificarProductos", codigoParameter, productoParameter, idCategoriaParameter, precioParameter, stockParameter, activoParameter)
    End Function

    Public Overridable Function ModificarProveedor(cod_Proveedor As String, nombre As String, apellido As String, telefono As Nullable(Of Long), direccion As String, cbuAlias As String, observacion As String) As Integer
        Dim cod_ProveedorParameter As ObjectParameter = If(cod_Proveedor IsNot Nothing, New ObjectParameter("Cod_Proveedor", cod_Proveedor), New ObjectParameter("Cod_Proveedor", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("Apellido", apellido), New ObjectParameter("Apellido", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono.HasValue, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(Long)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim cbuAliasParameter As ObjectParameter = If(cbuAlias IsNot Nothing, New ObjectParameter("CbuAlias", cbuAlias), New ObjectParameter("CbuAlias", GetType(String)))

        Dim observacionParameter As ObjectParameter = If(observacion IsNot Nothing, New ObjectParameter("Observacion", observacion), New ObjectParameter("Observacion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ModificarProveedor", cod_ProveedorParameter, nombreParameter, apellidoParameter, telefonoParameter, direccionParameter, cbuAliasParameter, observacionParameter)
    End Function

    Public Overridable Function ModificarUsuario(id_Usuario As Nullable(Of Integer), id_Perfil As Nullable(Of Integer), nombre As String, apellido As String, dni As Nullable(Of Integer), telefono As Nullable(Of Long), direccion As String, email As String, usuario As String, contraseña As String, activo As String) As Integer
        Dim id_UsuarioParameter As ObjectParameter = If(id_Usuario.HasValue, New ObjectParameter("Id_Usuario", id_Usuario), New ObjectParameter("Id_Usuario", GetType(Integer)))

        Dim id_PerfilParameter As ObjectParameter = If(id_Perfil.HasValue, New ObjectParameter("Id_Perfil", id_Perfil), New ObjectParameter("Id_Perfil", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("Apellido", apellido), New ObjectParameter("Apellido", GetType(String)))

        Dim dniParameter As ObjectParameter = If(dni.HasValue, New ObjectParameter("Dni", dni), New ObjectParameter("Dni", GetType(Integer)))

        Dim telefonoParameter As ObjectParameter = If(telefono.HasValue, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(Long)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))

        Dim contraseñaParameter As ObjectParameter = If(contraseña IsNot Nothing, New ObjectParameter("Contraseña", contraseña), New ObjectParameter("Contraseña", GetType(String)))

        Dim activoParameter As ObjectParameter = If(activo IsNot Nothing, New ObjectParameter("Activo", activo), New ObjectParameter("Activo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ModificarUsuario", id_UsuarioParameter, id_PerfilParameter, nombreParameter, apellidoParameter, dniParameter, telefonoParameter, direccionParameter, emailParameter, usuarioParameter, contraseñaParameter, activoParameter)
    End Function

    Public Overridable Function MostrarVenta() As ObjectResult(Of MostrarVenta_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of MostrarVenta_Result)("MostrarVenta")
    End Function

    Public Overridable Function ObtenerIdCabecera() As ObjectResult(Of Nullable(Of Integer))
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("ObtenerIdCabecera")
    End Function

    Public Overridable Function ObtenerIdUsuario(usuario As String) As ObjectResult(Of Nullable(Of Integer))
        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("ObtenerIdUsuario", usuarioParameter)
    End Function

    Public Overridable Function ObtenerIdVenta() As ObjectResult(Of Nullable(Of Integer))
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("ObtenerIdVenta")
    End Function

    Public Overridable Function RegistrarCategoria(categoria As String, activos As String) As Integer
        Dim categoriaParameter As ObjectParameter = If(categoria IsNot Nothing, New ObjectParameter("Categoria", categoria), New ObjectParameter("Categoria", GetType(String)))

        Dim activosParameter As ObjectParameter = If(activos IsNot Nothing, New ObjectParameter("Activos", activos), New ObjectParameter("Activos", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("RegistrarCategoria", categoriaParameter, activosParameter)
    End Function

    Public Overridable Function RegistrarCliente(nombre As String, apellido As String, dni As Nullable(Of Integer), domicilio As String, email As String, telefono As Nullable(Of Long), activo As String) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("Apellido", apellido), New ObjectParameter("Apellido", GetType(String)))

        Dim dniParameter As ObjectParameter = If(dni.HasValue, New ObjectParameter("Dni", dni), New ObjectParameter("Dni", GetType(Integer)))

        Dim domicilioParameter As ObjectParameter = If(domicilio IsNot Nothing, New ObjectParameter("Domicilio", domicilio), New ObjectParameter("Domicilio", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono.HasValue, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(Long)))

        Dim activoParameter As ObjectParameter = If(activo IsNot Nothing, New ObjectParameter("Activo", activo), New ObjectParameter("Activo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("RegistrarCliente", nombreParameter, apellidoParameter, dniParameter, domicilioParameter, emailParameter, telefonoParameter, activoParameter)
    End Function

    Public Overridable Function RegistrarProductos(producto As String, idCategoria As String, precio As Nullable(Of Double), stock As Nullable(Of Integer), activo As String) As Integer
        Dim productoParameter As ObjectParameter = If(producto IsNot Nothing, New ObjectParameter("Producto", producto), New ObjectParameter("Producto", GetType(String)))

        Dim idCategoriaParameter As ObjectParameter = If(idCategoria IsNot Nothing, New ObjectParameter("IdCategoria", idCategoria), New ObjectParameter("IdCategoria", GetType(String)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("Precio", precio), New ObjectParameter("Precio", GetType(Double)))

        Dim stockParameter As ObjectParameter = If(stock.HasValue, New ObjectParameter("Stock", stock), New ObjectParameter("Stock", GetType(Integer)))

        Dim activoParameter As ObjectParameter = If(activo IsNot Nothing, New ObjectParameter("Activo", activo), New ObjectParameter("Activo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("RegistrarProductos", productoParameter, idCategoriaParameter, precioParameter, stockParameter, activoParameter)
    End Function

    Public Overridable Function RegistrarProveedores(nombre As String, apellido As String, telefono As Nullable(Of Long), direccion As String, cbuAlias As String, observacion As String) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("Apellido", apellido), New ObjectParameter("Apellido", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono.HasValue, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(Long)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim cbuAliasParameter As ObjectParameter = If(cbuAlias IsNot Nothing, New ObjectParameter("CbuAlias", cbuAlias), New ObjectParameter("CbuAlias", GetType(String)))

        Dim observacionParameter As ObjectParameter = If(observacion IsNot Nothing, New ObjectParameter("Observacion", observacion), New ObjectParameter("Observacion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("RegistrarProveedores", nombreParameter, apellidoParameter, telefonoParameter, direccionParameter, cbuAliasParameter, observacionParameter)
    End Function

    Public Overridable Function RegistrarUsuario(id_Perfil As Nullable(Of Integer), nombre As String, apellido As String, dni As Nullable(Of Integer), telefono As Nullable(Of Long), direccion As String, email As String, usuario As String, contraseña As String, activo As String) As Integer
        Dim id_PerfilParameter As ObjectParameter = If(id_Perfil.HasValue, New ObjectParameter("Id_Perfil", id_Perfil), New ObjectParameter("Id_Perfil", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim apellidoParameter As ObjectParameter = If(apellido IsNot Nothing, New ObjectParameter("Apellido", apellido), New ObjectParameter("Apellido", GetType(String)))

        Dim dniParameter As ObjectParameter = If(dni.HasValue, New ObjectParameter("Dni", dni), New ObjectParameter("Dni", GetType(Integer)))

        Dim telefonoParameter As ObjectParameter = If(telefono.HasValue, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(Long)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))

        Dim contraseñaParameter As ObjectParameter = If(contraseña IsNot Nothing, New ObjectParameter("Contraseña", contraseña), New ObjectParameter("Contraseña", GetType(String)))

        Dim activoParameter As ObjectParameter = If(activo IsNot Nothing, New ObjectParameter("Activo", activo), New ObjectParameter("Activo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("RegistrarUsuario", id_PerfilParameter, nombreParameter, apellidoParameter, dniParameter, telefonoParameter, direccionParameter, emailParameter, usuarioParameter, contraseñaParameter, activoParameter)
    End Function

    Public Overridable Function RegistrarVenta(id_Cliente As String, id_Usuario As Nullable(Of Integer), fecha As Nullable(Of Date), total As Nullable(Of Decimal)) As Integer
        Dim id_ClienteParameter As ObjectParameter = If(id_Cliente IsNot Nothing, New ObjectParameter("Id_Cliente", id_Cliente), New ObjectParameter("Id_Cliente", GetType(String)))

        Dim id_UsuarioParameter As ObjectParameter = If(id_Usuario.HasValue, New ObjectParameter("Id_Usuario", id_Usuario), New ObjectParameter("Id_Usuario", GetType(Integer)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("RegistrarVenta", id_ClienteParameter, id_UsuarioParameter, fechaParameter, totalParameter)
    End Function

    Public Overridable Function RegistrarVentaDetalle(codigo As String, id_cabecera As Nullable(Of Integer), precio As Nullable(Of Decimal), cantidad As Nullable(Of Integer), total As Nullable(Of Decimal)) As Integer
        Dim codigoParameter As ObjectParameter = If(codigo IsNot Nothing, New ObjectParameter("Codigo", codigo), New ObjectParameter("Codigo", GetType(String)))

        Dim id_cabeceraParameter As ObjectParameter = If(id_cabecera.HasValue, New ObjectParameter("Id_cabecera", id_cabecera), New ObjectParameter("Id_cabecera", GetType(Integer)))

        Dim precioParameter As ObjectParameter = If(precio.HasValue, New ObjectParameter("Precio", precio), New ObjectParameter("Precio", GetType(Decimal)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("Cantidad", cantidad), New ObjectParameter("Cantidad", GetType(Integer)))

        Dim totalParameter As ObjectParameter = If(total.HasValue, New ObjectParameter("Total", total), New ObjectParameter("Total", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("RegistrarVentaDetalle", codigoParameter, id_cabeceraParameter, precioParameter, cantidadParameter, totalParameter)
    End Function

    Public Overridable Function SelectCategorias() As ObjectResult(Of SelectCategorias_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of SelectCategorias_Result)("SelectCategorias")
    End Function

    Public Overridable Function SelectClientes() As ObjectResult(Of SelectClientes_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of SelectClientes_Result)("SelectClientes")
    End Function

    Public Overridable Function SelectProductos() As ObjectResult(Of SelectProductos_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of SelectProductos_Result)("SelectProductos")
    End Function

    Public Overridable Function SelectUsuarios() As ObjectResult(Of SelectUsuarios_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of SelectUsuarios_Result)("SelectUsuarios")
    End Function

    Public Overridable Function sp_alterdiagram(diagramname As String, owner_id As Nullable(Of Integer), version As Nullable(Of Integer), definition As Byte()) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim versionParameter As ObjectParameter = If(version.HasValue, New ObjectParameter("version", version), New ObjectParameter("version", GetType(Integer)))

        Dim definitionParameter As ObjectParameter = If(definition IsNot Nothing, New ObjectParameter("definition", definition), New ObjectParameter("definition", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter)
    End Function

    Public Overridable Function sp_creatediagram(diagramname As String, owner_id As Nullable(Of Integer), version As Nullable(Of Integer), definition As Byte()) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim versionParameter As ObjectParameter = If(version.HasValue, New ObjectParameter("version", version), New ObjectParameter("version", GetType(Integer)))

        Dim definitionParameter As ObjectParameter = If(definition IsNot Nothing, New ObjectParameter("definition", definition), New ObjectParameter("definition", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter)
    End Function

    Public Overridable Function sp_dropdiagram(diagramname As String, owner_id As Nullable(Of Integer)) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_helpdiagramdefinition(diagramname As String, owner_id As Nullable(Of Integer)) As ObjectResult(Of sp_helpdiagramdefinition_Result)
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_helpdiagramdefinition_Result)("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_helpdiagrams(diagramname As String, owner_id As Nullable(Of Integer)) As ObjectResult(Of sp_helpdiagrams_Result)
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_helpdiagrams_Result)("sp_helpdiagrams", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_renamediagram(diagramname As String, owner_id As Nullable(Of Integer), new_diagramname As String) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim new_diagramnameParameter As ObjectParameter = If(new_diagramname IsNot Nothing, New ObjectParameter("new_diagramname", new_diagramname), New ObjectParameter("new_diagramname", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter)
    End Function

    Public Overridable Function sp_upgraddiagrams() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_upgraddiagrams")
    End Function

End Class
